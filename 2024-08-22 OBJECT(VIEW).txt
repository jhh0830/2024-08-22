 < VIEW 뷰>
    
    SELECT (쿼리문) 을 저장해둘 수 있는 객ㅊ
    (자주 쓰이는 긴 SELECT 문을 저장해두면
    긴 SELECT 문을 매번 다시 기술할 필요가 없음)
    조회용 임시 테이블 같은 존재
    => 실제 데이터가 담겨있는 것은 아님 (저장용X)

-- 뷰를 사용하는 이유
-- 예) "한국" 에서 근무하는 사원들의 사번, 이름, 부서명, 급여,
--    근무국가명, 직급명을 조회하시오

--> 업무상 위의 긴 쿼리문이 자주 많이 쓰일 경우
-- 매번 필요할때마다 위의 쿼리문을 계속 기술해서 써야함!!

1. VIEW 생성 방법 (CREATE)
    
    [ 표현법 ]
    CREATE VIEW 뷰명
    AS (서브쿼리);
    
    CREATE OR REPLACE VIEW 뷰명
    AS (서브쿼리);
    => OR REPLACE 는 생략 가능하다.
       뷰 생성 시 기존에 중복된 이름의 뷰가 없다면
       새로이 뷰를 추가하고
       뷰 생성 시 기존에 중복된 이름의 뷰가 있다면
       해당 뷰를 변경 (갱신) 하는 옵션
    

-- 뷰는 논리적인 가상테이블이다.
-- 즉, 실질적으로 데이터를 저장하고 있지는 않음!!
-- 단순히 "SELECT 문" 이 TEXT 문구로 저장되어있음!!
-- 참고) USER_VIEWS : 해당 계정이 가지고있는 VIEW 들에 대한 내용을
--                   가지고 있는 데이터 딕셔너리


 * 뷰 생성 시 컬럼에 별칭 부여하기
    
    서브쿼리의 SELECT 절에
    함수식 또는 연산식이 포함된 경우 반드시 별칭 부여해야함!!


* 생성된 뷰를 이용해서 DML (INSERT, UPDATE, DELETE) 사용 가능
    단, 뷰를 통해서 데이터 내용을 변경하게 되면
    실제 데이터가 담겨있는 실질적인 테이블 (베이스 테이블, 원본 테이블)
    에도 적용이 된다!!


 * 하지만 뷰를 가지고 DML 이 불가능한 경우가 더 많음!!
    
    1) 뷰에 정의되어있지 않은 컬럼을 조작하는 경우
    2) 뷰에 정의되어있지 않은 컬럼 중에
       베이스 테이블 상에 NOT NULL 제약조건이 지정된 경우
    3) 산술연산식 또는 함수식을 통해 뷰를 정의한 경우
    4) 그룹함수나 GROUP BY 절이 포함된 경우
    5) DISTINCT 구문이 포함된 경우
    6) JOIN 을 이용해서 여러 테이블을 매칭시켜 놓은 경우

* VIEW 생성 시 사용 가능한 옵션들
    
    [ 최종 상세 표현법 ]
    
    CREATE OR REPLACE FOR/NOFORCE VIEW 뷰명
    AS (서브쿼리)
    WITH CHECK OPTION
    WITH READ ONLY;
    
    1) OR REPLACE
    해당 뷰 이름이 이미 존재하면 갱신시켜주는 옵션
    (해당 뷰 이름이 존재하지 않으면 새로이 생성해줌)
    
    
    2) FORCE/NOFORCE
    - FORCE : 서브쿼리에 기술된 테이블이 실제로 존재하지 않아도 뷰가 생성
    - NOFORCE : 서브쿼리에 기술된 테이블이 반드시 존재해야지만 뷰가 생성 (생략 시 기본값)
    
    
    3) WITH CHECK OPTION
    서브쿼리의 조건절 (WHERE 절) 에 기술된 내용에 만족하는 값으로만
    뷰에 DML 이가능하게끔 해주는 옵션
    조건에 부합하지 않는 값으로 DML 구문을 실행하는 순간 오류 발생
    
    4) WITH READ ONLY
    뷰에 대해 조회만 가능하게끔 해주는 옵션 (DML 수행불가)
--> DML 조작 자체가 불가해짐
-- SQL 오류: ORA-42399: cannot perform a DML operation on a read-only view